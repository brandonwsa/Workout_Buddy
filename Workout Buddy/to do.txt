get apps created
	need a users app to manage user login username(PK) and password
	need Workout app
	need Exercise app
	need ExerciseDetails app
	need main app
	
make serializers _DONE for workouts and users
make models _DONE for workouts and users
figureout timezone
make functionalty of CRUD to workouts app - DONE for website functionality
get it so other users cant see others workouts but their own - DONE
replace WName in workout/new with 'Workout Name:'
Make API page functionality - DONE
make api for workouts - DONE
make exercise app
make CRUD for exercise app
make exercisedetails app
make CRUD for exervisedetails app
Create custom API urls with slugs
Create back to home button on API page
add try excepts

KNOWN ISSUES:
when including router urls to patternurls for api functionality to be used, when clicking on a workout to view its details
	the user is directed to the api page for the workout details instead.

Can either make a new workout for each entry of your day, or select existing workout and add exercises to it.
	can order and get results by date if doing the later.


check to see if we have to add anything to urls
	added the code from django restful framework in urls.py, gotta see if we actually need some of it tho, like the serializer


exercise table example: needs to be split up in different joinable tables

FOR MONOLITHIC APPROACH, will not be doing:
+ = pk		- = fk

entities:
user(username+, email, password1, password2)
workout(WName+, Date+)
exercise(EName+, Date+, weight+, sameWeight(y/n), sets, reps, volume)

relationships:
belongs to - exercise to workout

diagram:
[workout]--N--{belongs to}--M--[exercise]

tables:
belongs to(WName+-, userName+-, EName+-, Date+-, weight+-)
exercise(EName+, Date+, weight+, sameWeight(y/n), sets, reps, volume)

FOR MICROSERVICE APPROACH, will be using:

User app table:
UName(pk)	email				password1	password2
brandon		brandon@gmail.com		hashed		hashed
joe		joe@gmail.com			hashed		hashed

Workouts app table:
username(pk)	Date(pk)	WName
brandon		12-2-20		fullbody1
brandon		12-4-20		fullbody2
joe		12-4-20		pulls
joe		12-5-20		push
brandon		12-6-20		additional

Exercises app table:
username(fk)(pk)	Date(fk)(pk)	EName(pk)	SameWait(y/n)	totalVolume
brandon			12-2-20		benchpress	n		2940
brandon			12-2-20		backsquat	n		.
brandon			12-2-20		pullups		y		.
brandon			12-2-20		hamstringcurls	y		.
brandon			12-2-20		dragcurls	y		.
brandon			12-2-20		facepulls	y		1260
brandon			12-4-20		deadlift	n		.
.			.		.		.		.
joe			12-4-20		bentoverrow	n		4210
joe			12-4-20		facepulls	y		.
joe			12-4-20		armcurls	y		.
joe			12-4-20		latpulldowns	n		.
joe			12-4-20		deadlift	n		.


ExerciseDetails app table:
username(fk)(pk)	Date(fk)(pk)	EName(fk)(pk)	weight(pk)	setAmount	totalReps	volume
brandon			12-2-20		benchpress	110		1		10		1100
brandon			12-2-20		benchpress	115		2		16		1840
.			.		.		.		.		.		.
brandon			12-2-20		facepulls	42		3		30		1260
.			.		.		.		.		.		.
joe			12-4-20		bentoverrow	135		1		10		1350
joe			12-4-20		bentoverrow	185		1		8		1480
joe			12-4-20		bentoverrow	230		1		6		1380
.			.		.		.		.		.		.
